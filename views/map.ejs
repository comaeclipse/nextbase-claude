<%- include('layout', { body:
`<div class="map-container">
    <div class="map-header">
        <h1>Retirement City Map</h1>
        <p>Explore all ${locations.length} cities in our database</p>
    </div>

    <div id="map"></div>

    <div class="map-legend">
        <div class="legend-title">Firearms Law Grade</div>
        <div class="legend-items">
            <div class="legend-item">
                <div class="legend-marker legend-marker-teal"></div>
                <span>A-B (Strongest)</span>
            </div>
            <div class="legend-item">
                <div class="legend-marker legend-marker-amber"></div>
                <span>C (Moderate)</span>
            </div>
            <div class="legend-item">
                <div class="legend-marker legend-marker-rose"></div>
                <span>D-F (Weakest)</span>
            </div>
        </div>
        <div class="legend-info">
            <span>Click any marker to view city details</span>
        </div>
    </div>
</div>

<link rel="stylesheet" href="https://unpkg.com/leaflet@1.9.4/dist/leaflet.css" />
<script src="https://unpkg.com/leaflet@1.9.4/dist/leaflet.js"></script>

<script>
(function() {
    // Cities data
    var cities = ${JSON.stringify(locations)};

    // Initialize map - centered on continental US
    var map = L.map('map', {
        center: [39.8283, -98.5795],
        zoom: 3.5,
        minZoom: 3,
        maxZoom: 12
    });

    // Function to get color based on firearms grade
    function gradeToColor(grade) {
        if (!grade) return { stroke: '#be123c', fill: 'rgba(244,114,182,0.65)' };
        var normalized = grade.trim().charAt(0).toUpperCase();
        if (normalized === 'A' || normalized === 'B') {
            return { stroke: '#0f766e', fill: 'rgba(20,184,166,0.75)' };
        }
        if (normalized === 'C') {
            return { stroke: '#b45309', fill: 'rgba(251,191,36,0.7)' };
        }
        return { stroke: '#be123c', fill: 'rgba(244,114,182,0.65)' };
    }

    // Add OpenStreetMap tile layer
    L.tileLayer('https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png', {
        attribution: '&copy; <a href="https://www.openstreetmap.org/copyright">OpenStreetMap</a> contributors',
        maxZoom: 19
    }).addTo(map);

    // Add circle markers for each city
    cities.forEach(function(city) {
        if (city.coordinates && city.coordinates.lat && city.coordinates.lng) {
            var grade = city.firearms && city.firearms.grade ? city.firearms.grade : '';
            var colors = gradeToColor(grade);

            var circleMarker = L.circleMarker([city.coordinates.lat, city.coordinates.lng], {
                radius: 6.5,
                color: colors.stroke,
                fillColor: colors.fill,
                weight: 1.5,
                fillOpacity: 1
            });

            var cityUrl = '/' + city.state.toLowerCase() + '/' + city.city.toLowerCase().replace(/\\s+/g, '');

            var popupContent =
                '<div class="marker-popup">' +
                    '<h3>' + city.city + ', ' + city.state + '</h3>' +
                    '<div class="popup-details">' +
                        (city.population ? '<p><i class="fas fa-users"></i> ' + city.population.toLocaleString() + '</p>' : '') +
                        (city.firearms && city.firearms.grade ? '<p><i class="fas fa-gavel"></i> Firearms Grade: ' + city.firearms.grade + '</p>' : '') +
                        (city.economy && city.economy.costOfLiving ? '<p><i class="fas fa-dollar-sign"></i> COL: ' + city.economy.costOfLiving + '</p>' : '') +
                    '</div>' +
                    '<a href="' + cityUrl + '" class="popup-link">View Details <i class="fas fa-arrow-right"></i></a>' +
                '</div>';

            circleMarker.bindPopup(popupContent);
            circleMarker.addTo(map);
        }
    });

    // Optionally fit bounds to show all markers, but keep USA visible
    if (cities.length > 0) {
        var bounds = [];
        cities.forEach(function(city) {
            if (city.coordinates && city.coordinates.lat && city.coordinates.lng) {
                bounds.push([city.coordinates.lat, city.coordinates.lng]);
            }
        });

        if (bounds.length > 0) {
            map.fitBounds(bounds, { padding: [40, 40], maxZoom: 4 });
        }
    }

    // Fix map rendering issue - invalidate size to recalculate container dimensions
    setTimeout(function() {
        map.invalidateSize();
    }, 100);
})();
</script>

<style>
.map-container {
    max-width: 100%;
    padding: var(--spacing-xl);
    min-height: calc(100vh - 200px);
}

.map-header {
    text-align: center;
    margin-bottom: var(--spacing-xl);
}

.map-header h1 {
    font-size: 2.5rem;
    font-weight: 700;
    color: var(--text-color);
    margin-bottom: var(--spacing-sm);
}

.map-header p {
    font-size: 1.125rem;
    color: var(--text-secondary);
}

#map {
    height: 600px;
    width: 100%;
    border-radius: var(--radius-xl);
    border: 2px solid var(--border-color);
    box-shadow: 0 4px 12px var(--shadow);
    margin-bottom: var(--spacing-lg);
}

.map-legend {
    padding: var(--spacing-md) var(--spacing-lg);
    background-color: var(--card-bg);
    border: 1px solid var(--border-color);
    border-radius: var(--radius-lg);
    max-width: 700px;
    margin: 0 auto;
}

.legend-title {
    font-weight: 600;
    font-size: 0.875rem;
    color: var(--text-color);
    margin-bottom: var(--spacing-sm);
    text-align: center;
}

.legend-items {
    display: flex;
    justify-content: center;
    align-items: center;
    gap: var(--spacing-lg);
    margin-bottom: var(--spacing-sm);
    flex-wrap: wrap;
}

.legend-item {
    display: flex;
    align-items: center;
    gap: var(--spacing-sm);
}

.legend-item span {
    font-size: 0.813rem;
    color: var(--text-secondary);
}

.legend-marker {
    width: 16px;
    height: 16px;
    border-radius: 50%;
    border: 2px solid;
}

.legend-marker-teal {
    background-color: rgba(20,184,166,0.75);
    border-color: #0f766e;
}

.legend-marker-amber {
    background-color: rgba(251,191,36,0.7);
    border-color: #b45309;
}

.legend-marker-rose {
    background-color: rgba(244,114,182,0.65);
    border-color: #be123c;
}

.legend-info {
    color: var(--text-secondary);
    font-size: 0.75rem;
    text-align: center;
    padding-top: var(--spacing-xs);
    border-top: 1px solid var(--border-color);
}

/* Popup styles */
.leaflet-popup-content-wrapper {
    background-color: var(--card-bg);
    border: 2px solid var(--border-color);
    border-radius: var(--radius-md);
    padding: 0;
}

.leaflet-popup-tip {
    background-color: var(--card-bg);
    border: 2px solid var(--border-color);
    border-top: none;
    border-right: none;
}

.marker-popup {
    padding: var(--spacing-md);
    min-width: 200px;
}

.marker-popup h3 {
    font-size: 1.25rem;
    font-weight: 600;
    color: var(--text-color);
    margin-bottom: var(--spacing-sm);
}

.popup-details {
    margin-bottom: var(--spacing-md);
}

.popup-details p {
    display: flex;
    align-items: center;
    gap: var(--spacing-xs);
    font-size: 0.875rem;
    color: var(--text-secondary);
    margin: var(--spacing-xs) 0;
}

.popup-details i {
    color: var(--primary-color);
    width: 16px;
}

.popup-link {
    display: inline-flex;
    align-items: center;
    gap: var(--spacing-xs);
    background-color: var(--primary-color);
    color: white;
    padding: var(--spacing-xs) var(--spacing-md);
    border-radius: var(--radius-sm);
    text-decoration: none;
    font-size: 0.875rem;
    font-weight: 500;
    transition: var(--transition);
}

.popup-link:hover {
    background-color: var(--primary-hover);
}

@media (max-width: 768px) {
    .map-container {
        padding: var(--spacing-lg) var(--spacing-md);
    }

    .map-header h1 {
        font-size: 2rem;
    }

    #map {
        height: 400px;
    }

    .map-legend {
        padding: var(--spacing-sm) var(--spacing-md);
    }

    .legend-items {
        gap: var(--spacing-md);
    }
}
</style>` }) %>
